{"version":3,"sources":["webpack:///webpack/bootstrap d84198470809a179280d","webpack:///./lib/pokemania.js","webpack:///./lib/game.js","webpack:///./lib/game_view.js","webpack:///./lib/human_player.js","webpack:///./lib/util.js","webpack:///./lib/player.js","webpack:///./lib/computer_player.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;AChEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;;;ACXD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA,mBAAmB,uBAAuB;AAC1C,yBAAyB,uBAAuB;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;AC1EA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,sBAAsB,EAAE;AAChD,KAAK;AACL;AACA,wBAAwB,sBAAsB,EAAE;AAChD;AACA;AACA;;AAEA;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;AC9DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;ACjFA;AACA;;AAEA;;AAEA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d84198470809a179280d","import Game from './game';\nimport GameView from './game_view';\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvas = document.getElementById(\"game-canvas\");\n  canvas.width = Game.CANVAS_X;\n  canvas.height = Game.CANVAS_Y;\n\n  const context = canvas.getContext(\"2d\");\n  const game = new Game();\n  new GameView(game, context).start();\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/pokemania.js\n// module id = 0\n// module chunks = 0","import HumanPlayer from './human_player';\nimport ComputerPlayer from './computer_player';\nimport Util from './util';\n\nclass Game {\n  constructor() {\n    this.humanPlayers = [];\n    this.computerPlayers = [];\n\n    this.addComputerPlayers(30);\n  }\n\n  addPlayer(player) {\n    if (player instanceof HumanPlayer) {\n      this.humanPlayers.push(player);\n    } else if (player instanceof ComputerPlayer) {\n      this.computerPlayers.push(player);\n    } else {\n      throw \"unknown type of player :(\";\n    }\n  }\n\n  addNewHumanPlayer() {\n    const humanPlayer = new HumanPlayer({\n      pos: this.randomPos(),\n      game: this\n    });\n\n    this.addPlayer(humanPlayer);\n    return humanPlayer;\n  }\n\n  addNewComputerPlayer() {\n    const computerPlayer = new ComputerPlayer({\n      pos: this.randomPos(),\n      game: this,\n      velocity: Util.randomVelocity(),\n      radius: Util.randomRadius(),\n      name: Util.randomPlayerName(),\n      color: \"#293283\"\n    });\n\n    this.addPlayer(computerPlayer);\n    return computerPlayer;\n  }\n\n  addComputerPlayers(n) {\n    for (let i = 0; i < n; i++) {\n      this.addNewComputerPlayer();\n    }\n  }\n\n  allPlayers() {\n    return [].concat(this.humanPlayers, this.computerPlayers);\n  }\n\n  draw(context, offset) {\n    context.clearRect(0, 0, Game.CANVAS_X, Game.CANVAS_Y);\n    context.fillStyle = Game.BG_COLOR;\n    context.fillRect(0, 0, Game.CANVAS_X, Game.CANVAS_Y);\n\n    this.allPlayers().forEach(player => {\n      if (!this.outOfCanvasBounds(player, offset)) {\n        player.draw(context, offset);\n      }\n    });\n\n    this.drawBorder(context, offset);\n  }\n\n  drawBorder(context, offset) {\n    context.strokeStyle = \"#000\";\n    context.lineWidth = Game.BORDER_WIDTH;\n    context.strokeRect(offset[0], offset[1], Game.DIM_X, Game.DIM_Y);\n    context.stroke();\n  }\n\n  step(timeDelta) {\n    this.moveObjects(timeDelta);\n    this.checkCollisions();\n  }\n\n  moveObjects(timeDelta) {\n    this.allPlayers().forEach(player => {\n      if (player instanceof HumanPlayer) {\n        player.velocity[0] *= 0.9;\n        player.velocity[1] *= 0.9;\n      }\n\n      player.move(timeDelta);\n    });\n  }\n\n  checkCollisions() {\n    const allPlayers = this.allPlayers();\n\n    for (let i = 0; i < allPlayers.length; i++) {\n      for (let j = i + 1; j < allPlayers.length; j++) {\n        const player1 = allPlayers[i];\n        const player2 = allPlayers[j];\n\n        if (player1.isCollidedWith(player2)) {\n          player1.handleCollision(player2);\n        }\n      }\n    }\n  }\n\n  outOfBounds(player) {\n    const pos = player.pos,\n      radius = player.radius;\n\n    return (pos[0] - radius < 0) || (pos[1] - radius < 0) ||\n      (pos[0] > Game.DIM_X - radius) || (pos[1] > Game.DIM_Y - radius);\n  }\n\n  outOfCanvasBounds(player, offset) {\n    const pos = player.pos,\n      radius = player.radius;\n\n    return (pos[0] + offset[0] + radius < 0 ||\n    pos[0] + offset[0] - radius > Game.CANVAS_X ||\n    pos[1] + offset[1] + radius < 0 ||\n    pos[1] + offset[1] - radius > Game.CANVAS_Y);\n  }\n\n  randomPos() {\n    return [\n      (Game.DIM_X - 50) * Math.random() + 25,\n      (Game.DIM_Y - 50) * Math.random() + 25\n    ];\n  }\n\n  removePlayer(player) {\n    if (player instanceof HumanPlayer) {\n      this.humanPlayers.splice(this.humanPlayers.indexOf(player), 1);\n    } else if (player instanceof ComputerPlayer) {\n      this.computerPlayers.splice(this.computerPlayers.indexOf(player), 1);\n    } else {\n      throw \"unknown type of player :(\";\n    }\n  }\n}\n\nGame.BG_COLOR = \"#c8eafb\";\nGame.BORDER_WIDTH = 7;\nGame.DIM_X = 2000;\nGame.DIM_Y = 2000;\nGame.CANVAS_X = 700;\nGame.CANVAS_Y = 450;\n\nexport default Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 1\n// module chunks = 0","class GameView {\n  constructor(game, context) {\n    this.context = context;\n    this.game = game;\n    this.currentPlayer = this.game.addNewHumanPlayer();\n  }\n\n  start() {\n    this.bindKeyHandlers();\n    this.lastTime = 0;\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  bindKeyHandlers() {\n    Object.keys(GameView.MOVES).forEach(key => {\n      let move = GameView.MOVES[key];\n\n      document.addEventListener('keydown', e => {\n        if (e.key === key) {\n          GameView.KEYS[GameView.MOVES[key]] = true;\n        }\n      }, false);\n\n      document.addEventListener('keyup', e => {\n        if (e.key === key) {\n          GameView.KEYS[GameView.MOVES[key]] = false;\n        }\n      }, false);\n    });\n  }\n\n  animate(time) {\n    const timeDelta = time - this.lastTime;\n    const offset = this.getCurrentPlayerOffset();\n\n    this.powerCurrentPlayer();\n    this.game.step(timeDelta);\n    this.game.draw(this.context, offset);\n    this.lastTime = time;\n\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  getCurrentPlayerOffset() {\n    return [\n      this.game.constructor.CANVAS_X / 2 - this.currentPlayer.pos[0],\n      this.game.constructor.CANVAS_Y / 2 - this.currentPlayer.pos[1]\n    ];\n  }\n\n  powerCurrentPlayer() {\n    const impulse = 0.5;\n\n    if (GameView.KEYS.up) this.currentPlayer.power([0, -impulse]);\n    if (GameView.KEYS.down) this.currentPlayer.power([0, impulse]);\n    if (GameView.KEYS.left) this.currentPlayer.power([-impulse, 0]);\n    if (GameView.KEYS.right) this.currentPlayer.power([impulse, 0]);\n  }\n}\n\nGameView.MOVES = {\n  \"ArrowLeft\": \"left\",\n  \"ArrowUp\": \"up\",\n  \"ArrowRight\": \"right\",\n  \"ArrowDown\": \"down\"\n};\n\nGameView.KEYS = {\n  up: false,\n  down: false,\n  left: false,\n  right: false\n};\n\nexport default GameView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game_view.js\n// module id = 2\n// module chunks = 0","import Util from './util';\nimport Player from './player';\n\nclass HumanPlayer extends Player {\n  power(impulse) {\n    this.velocity[0] += impulse[0];\n    this.velocity[1] += impulse[1];\n\n    // this.capVelocities();\n  }\n\n  capVelocities() {\n    if (this.velocity[0] > 4) this.velocity[0] = 4;\n    if (this.velocity[1] > 4) this.velocity[1] = 4;\n    if (this.velocity[0] < -4) this.velocity[0] = -4;\n    if (this.velocity[1] < -4) this.velocity[1] = -4;\n  }\n\n  slowDownVelocity(direction) {\n    if (direction === \"ArrowLeft\" || direction === \"ArrowRight\") {\n      this.velocity[0] = this.velocity[0] / 2;\n      setTimeout(() => { this.velocity[0] = 0; }, 400);\n    } else {\n      this.velocity[1] = this.velocity[1] / 2;\n      setTimeout(() => { this.velocity[1] = 0; }, 400);\n    }\n  }\n}\n\nexport default HumanPlayer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/human_player.js\n// module id = 3\n// module chunks = 0","const Util = {\n  dist(pos1, pos2) {\n    return Math.sqrt(\n      Math.pow(pos1[0] - pos2[0], 2) + Math.pow(pos1[1] - pos2[1], 2)\n    );\n  },\n\n  randomRadius() {\n    return Math.floor(Math.random() * (20 - 5)) + 5;\n  },\n\n  randomVelocity() {\n    return [\n      this.randomVelocityPiece(),\n      this.randomVelocityPiece()\n    ];\n  },\n\n  randomVelocityPiece() {\n    return Math.floor(Math.random() * (1.2 + 1.2)) - 1.2;\n  },\n\n  randomPlayerName() {\n    return POKEMON_CHARACTER_NAMES[Math.floor(Math.random() * POKEMON_CHARACTER_NAMES.length)];\n  }\n};\n\nconst POKEMON_CHARACTER_NAMES = [\n  \"Misty\",\n  \"Lass\",\n  \"Serena\",\n  \"Bonnie\",\n  \"Iris\",\n  \"Jessie\",\n  \"Lillie\",\n  \"May\",\n  \"Dawn\",\n  \"Moon\",\n  \"Mallow\",\n  \"Sakura\",\n  \"Shauna\",\n  \"Candela\",\n  \"Officer Jenny\",\n  \"Aria\",\n  \"Olivia\",\n  \"Lusamine\",\n  \"Lana\",\n  \"Professor Ivy\",\n  \"Mom\",\n  \"Sabrina\",\n  \"Viola\",\n  \"Daisy\",\n  \"Bianca\",\n  \"Sumomo\",\n  \"Blanche\",\n  \"Agatha\",\n  \"Georgia\",\n  \"Grace\",\n  \"Malva\",\n  \"Karen\"\n];\n\nexport default Util;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/util.js\n// module id = 9\n// module chunks = 0","import Util from './util';\n\nclass Player {\n  constructor(options) {\n    this.pos = options.pos;\n    this.velocity = options.velocity || [0, 0];\n    this.radius = options.radius || DEFAULT_RADIUS;\n    this.name = options.name || \"Misty\";\n    this.color = options.color || \"#ff00fc\";\n    this.game = options.game;\n  }\n\n  draw(context, offset) {\n    context.fillStyle = this.color;\n\n    context.beginPath();\n    context.arc(\n      this.pos[0] + offset[0],\n      this.pos[1] + offset[1],\n      this.radius, 0, 2 * Math.PI\n    );\n\n    context.fill();\n\n    context.fillStyle = PLAYER_NAME_COLOR;\n    context.font = \"bold 14px Arial\";\n    context.fillText(\n      this.name,\n      this.pos[0] + offset[0] + this.radius,\n      this.pos[1] + offset[1]\n    );\n  }\n\n  move(timeDelta) {\n    const velocityScale = timeDelta / NORMAL_FRAME_TIME_DELTA,\n      sizeScale = (DEFAULT_RADIUS / this.radius - 1) / 4,\n      deltaX = this.velocity[0] * velocityScale * (1 + sizeScale),\n      deltaY = this.velocity[1] * velocityScale * (1 + sizeScale),\n      oldPos = this.pos;\n\n    this.pos = [this.pos[0] + deltaX, this.pos[1] + deltaY];\n    if (this.game.outOfBounds(this)) {\n      this.adjustOutOfBounds();\n      this.pos = oldPos;\n    }\n  }\n\n  adjustOutOfBounds() {\n    if (this.pos[0] > this.game.constructor.DIM_X - this.radius || this.pos[0] < this.radius) {\n      this.velocity[0] = -this.velocity[0];\n    }\n\n    if (this.pos[1] > this.game.constructor.DIM_Y - this.radius || this.pos[1] < this.radius) {\n      this.velocity[1] = -this.velocity[1];\n    }\n  }\n\n  isCollidedWith(otherPlayer) {\n    const centerDist = Util.dist(this.pos, otherPlayer.pos);\n    return centerDist < (this.radius + otherPlayer.radius);\n  }\n\n  handleCollision(otherPlayer) {\n    if (this.radius > otherPlayer.radius) {\n      this.radius += otherPlayer.radius / 2;\n      otherPlayer.remove();\n    } else {\n      otherPlayer.radius += this.radius / 2;\n      this.remove();\n    }\n  }\n\n  remove() {\n    this.game.removePlayer(this);\n  }\n}\n\nconst NORMAL_FRAME_TIME_DELTA = 1000 / 60;\nconst PLAYER_NAME_COLOR = \"#000\";\nconst DEFAULT_RADIUS = 15;\n\nexport default Player;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/player.js\n// module id = 10\n// module chunks = 0","import Util from './util';\nimport Player from './player';\n\nclass ComputerPlayer extends Player {\n\n}\n\nexport default ComputerPlayer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/computer_player.js\n// module id = 11\n// module chunks = 0"],"sourceRoot":""}